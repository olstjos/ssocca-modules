<?php

/**
 * @file
 * Module file for ISED_Custom
 */

use Drupal\Core\Database\Query\AlterableInterface;
use Drupal\Core\Url;
use \Drupal\Core\Breadcrumb\Breadcrumb;

/**
 * Implements hook_query_TAG_alter()
 */
function ised_custom_query_search_node_search_alter(AlterableInterface $query)
{
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $op = \Drupal::request()->query->get('op');
  $tidSector = $tidProvince = '';
  if ($op != t('Clear')) {
    $tidSector = \Drupal::request()->query->get('search_sector');
    $tidProvince = \Drupal::request()->query->get('search_province');
  }

  // Filter results to current language only
  $query->condition('n.langcode', $language, '=');

  // Filter results by sector if specified
  if ($tidSector) {
    $query->join('node__field_sector', 'ts', 'n.nid = ts.entity_id');
    $query->condition('ts.field_sector_target_id', $tidSector);
  }

  // Filter results by province if specified
  if ($tidProvince) {
    $query->join('node__field_province', 'tp', 'n.nid = tp.entity_id');
    $query->condition('tp.field_province_target_id', $tidProvince);
  }
}

/**
 * Implements hook_theme().
 */
function ised_custom_theme($existing, $type, $theme, $path)
{
  return [
    'sub_sector' => [
      'variables' => ['termdata' => NULL, 'language' => NULL],
    ],
  ];
}

/**
 * Implements hook_system_breadcrumb_alter().
 */
function ised_custom_system_breadcrumb_alter(\Drupal\Core\Breadcrumb\Breadcrumb &$breadcrumb, \Drupal\Core\Routing\RouteMatchInterface $route_match, array $context)
{

  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $route_name = \Drupal::routeMatch()->getRouteName();

  $UrlCanada = \Drupal\Core\Url::fromUri('https://www.canada.ca/' . $language);
  $LinkCanada = \Drupal\Core\Link::fromTextAndUrl('Canada.ca', $UrlCanada);
  $breadcrumb->addLink($LinkCanada);
  $breadcrumb_links = $breadcrumb->getLinks();
  $countLinks = count($breadcrumb_links);
  if ($countLinks > 0) {
    $lastvalue = end($breadcrumb_links);
    $lastkey = key($breadcrumb_links);

    $new_breadcrumb = array($lastkey=>$lastvalue);

    array_pop($breadcrumb_links);

    $breadcrumb_links = array_merge($new_breadcrumb,$breadcrumb_links);
  }
  $breadcrumb_links = $breadcrumb->getLinks();


  $UrlConsumerAffaires = \Drupal\Core\Url::fromUri('https://ic.gc.ca/eic/site/oca-bc.nsf/eng/h_ca00000.html');
  $LinkConsumerAffaires = \Drupal\Core\Link::fromTextAndUrl('Office of Consumer Affairs', $UrlConsumerAffaires);
  if ($language != 'en') {
    $UrlConsumerAffaires = \Drupal\Core\Url::fromUri('https://ic.gc.ca/eic/site/oca-bc.nsf/fra/h_ca00000.html');
    $LinkConsumerAffaires = \Drupal\Core\Link::fromTextAndUrl('Bureau de la consommation', $UrlConsumerAffaires);
  }
  $breadcrumb->addLink($LinkConsumerAffaires);
  $breadcrumb_links = $breadcrumb->getLinks();
  $countLinks = count($breadcrumb_links);
  if ($countLinks > 0) {
    $lastvalue = end($breadcrumb_links);
    $lastkey = key($breadcrumb_links);

    $new_breadcrumb = array($lastkey=>$lastvalue);

    array_pop($breadcrumb_links);

    $breadcrumb_links = array_merge($new_breadcrumb,$breadcrumb_links);
  }
  $breadcrumb_links = $breadcrumb->getLinks();

  if ($breadcrumb && !\Drupal::service('router.admin_context')->isAdminRoute()) {

    if ($route_name == 'view.sector_browse.page_2') {
      $breadcrumb_links[0]->setText(t('Canadian Consumer Hub'));
      $url = Url::fromRoute('<front>');
      $breadcrumb_links[0]->setUrl($url);

      $breadcrumb_links[1]->setText(t('Results'));
      $url2 = Url::fromRoute('<none>');
      $breadcrumb_links[1]->setUrl($url2);
    } else if ($route_name == 'search.view_node_search') {

      $breadcrumb_links[0]->setText(t('Canadian Consumer Hub'));
      $url = Url::fromRoute('<front>');
      $breadcrumb_links[0]->setUrl($url);
      unset($breadcrumb_links[1]);
      $breadcrumb = new Breadcrumb();
      $breadcrumb->setLinks($breadcrumb_links);
    } else if ($route_name == 'view.sector_browse.page_1') {
      $breadcrumb_links[0]->setText(t('Canadian Consumer Hub'));
      $url = Url::fromRoute('<front>');
      $breadcrumb_links[0]->setUrl($url);

      $breadcrumb->addLink(\Drupal\Core\Link::createFromRoute(t('Explore categories'), '<none>'));
    }
  }
}

function ised_custom_views_query_alter(Drupal\views\ViewExecutable $view, Drupal\views\Plugin\views\query\Sql $query)
{
  if ($view->id() == 'sector_browse' && $view->getDisplay()->display['id'] == 'page_2') {
    /*
    $tid = \Drupal::request()->query->get('tid');
    $query->where[0]['conditions'][0]["value"][":taxonomy_index_tid"] = $tid;
    */
  }
}

/**
 * Implements hook_form_TAG_form_alter.
 * If the sector is NOT provincial the filter by province should NOT be displayed.
 * Replace the - All - label with 'All provinces and territories' / 'Toutes les provinces et territoires'. 
 **/
function ised_custom_form_views_exposed_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'views_exposed_form') {
    $current_route = \Drupal::routeMatch()->getRouteName();
    if ($current_route == 'view.sector_browse.page_2') {
      $path = \Drupal::request()->getpathInfo();
      $arg  = explode('/',$path);
      if (isset($arg[5]) && is_numeric($arg[5])) {
        $tid = $arg[5];
      }
      else {
        // This throws a warning for some reason, but is a good fallback.
        $tid = \Drupal::request()->get('arg_0');
      }
      if (is_numeric($tid)) {
        if (isset($form['tid'])) {
          $term = \Drupal\taxonomy\Entity\Term::load($tid);
          if (is_object($term) && !$term->get('field_provincial')->value) {
            $form['#disabled'] = TRUE;
            $form['#attributes']['class'][] = 'hidden';
          }

          $form['tid']['#options']['All'] = t('All Provinces and Territories');// Toutes les provinces et territoires.
          //foreach ($form['tid']['#options'] as $key => &$value) {
          //}
        }
      }
//      \Drupal::messenger()->addMessage('keys:' . print_r(dump(array_keys($form/*['tid']*/), TRUE)), TRUE);//Very good for debugging.
      //\Drupal::messenger()->addMessage($current_route . ' term id=' . $tid, TRUE);
      //\Drupal::messenger()->addMessage('keys:' . print_r(dump($form['tid'], TRUE)), TRUE);
      //\Drupal::messenger()->addMessage('key:' . $key . ' value:' . $value, TRUE);
      // $form['#attached']['library'] = 'ised_custom/customlibrary';
    }
  }
}


